<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes">

    <Style x:Key="MiniAppStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="BorderBtn" BorderThickness="0" CornerRadius="25" BorderBrush="White" Background="#272B2F">
                        <md:PackIcon x:Name="IconMinemize" Kind="WindowMinimize" Width="25" Height="25" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Kind" TargetName="IconMinemize" Value="WindowMinimize" />
                            <Setter Property="Foreground" TargetName="IconMinemize" Value="Yellow" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Kind" TargetName="IconMinemize" Value="WindowMinimize" />
                            <Setter Property="Foreground" TargetName="IconMinemize" Value="Green" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaxAppStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="BorderBtn" BorderThickness="0" CornerRadius="25" Background="#272B2F">

                        <md:PackIcon x:Name="IconMaximize" Kind="WindowMaximize"
                                     Width="25" Height="25"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Foreground="White" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Cambia colore all'hover -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="IconMaximize" Property="Foreground" Value="Yellow"/>
                        </Trigger>
                        <!-- Cambia colore alla pressione -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="IconMaximize" Property="Foreground" Value="Orange"/>
                        </Trigger>

                        <!-- Cambia icona in base allo stato della finestra -->
                        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Maximized">
                            <Setter TargetName="IconMaximize" Property="Kind" Value="WindowRestore"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Normal">
                            <Setter TargetName="IconMaximize" Property="Kind" Value="WindowMaximize"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExitApp" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="BorderBtn" BorderThickness="0" CornerRadius="25" BorderBrush="White" Background="#272B2F">
                        <md:PackIcon x:Name="IconPower" Kind="Power" Width="25" Height="25" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Kind" TargetName="IconPower" Value="PowerCycle" />
                            <Setter Property="Foreground" TargetName="IconPower" Value="Yellow" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Kind" TargetName="IconPower" Value="WindowClose" />
                            <Setter Property="Foreground" TargetName="IconPower" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SendButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignOutlinedDarkButton}">
        <Setter Property="Margin" Value="10" />
        <Setter Property="Width" Value="75" />
        <Setter Property="Height" Value="55" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="md:HintAssist.IsFloating" Value="False" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Text.Length, ElementName=txtCMD}" Value="0">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1.0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BtnStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignOutlinedDarkButton}">
        <Setter Property="Margin" Value="5,7" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style x:Key="BtnNaviStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="12,0,0,0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="BtnHomeStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BtnNaviStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="BorderHome" BorderThickness="0" CornerRadius="5" Background="Transparent">
                        <md:PackIcon Name="IconHome" Kind="Home" Foreground="Cyan" Height="35" Width="35" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Kind" TargetName="IconHome" Value="HomeFind" />
                            <Setter Property="Foreground" TargetName="IconHome" Value="LightCyan" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Kind" TargetName="IconHome" Value="HomeFindOutline" />
                            <Setter Property="Foreground" TargetName="IconHome" Value="DarkCyan" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnProtocolStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BtnNaviStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="BorderXonXoff" BorderThickness="0" CornerRadius="25" Background="Transparent">
                        <md:PackIcon Name="IconXonXoff" Kind="PrinterPos" Foreground="Goldenrod" Height="35" Width="35" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Kind" TargetName="IconXonXoff" Value="PrinterPosCheck" />
                            <Setter Property="Foreground" TargetName="IconXonXoff" Value="LightGoldenrodYellow" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Kind" TargetName="IconXonXoff" Value="PrinterPosOutline" />
                            <Setter Property="Foreground" TargetName="IconXonXoff" Value="DarkGoldenrod" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnSettingsStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BtnNaviStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="BorderSetting" BorderThickness="0" CornerRadius="25" Background="Transparent">
                        <md:PackIcon Name="IconSettings" Kind="Settings" Foreground="Tomato" Height="35" Width="35" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Kind" TargetName="IconSettings" Value="Settings" />
                            <Setter Property="Foreground" TargetName="IconSettings" Value="Ivory" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Kind" TargetName="IconSettings" Value="SettingsOutline" />
                            <Setter Property="Foreground" TargetName="IconSettings" Value="Coral" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>